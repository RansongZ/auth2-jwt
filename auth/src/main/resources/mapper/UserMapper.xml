<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.bifu.distributed.auth.dao.UserMapper">
	<resultMap id="BaseResultMap" type="org.bifu.distributed.auth.domain.User">
		<id column="id" jdbcType="VARCHAR" property="id" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="disable" jdbcType="INTEGER" property="disable" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="ip" jdbcType="VARCHAR" property="ip" />
	</resultMap>

	<sql id="Base_Column_List">
		id, phone, email, password, disable, create_time,
		update_time, ip
	</sql>

	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_user
		where id = #{id,jdbcType=VARCHAR}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		sys_user
		where id = #{id,jdbcType=VARCHAR}
	</delete>

	<insert id="insert" parameterType="org.bifu.distributed.auth.domain.User">
		insert into sys_user (id,
		phone, email,
		password, disable, create_time,
		update_time, ip)
		values
		(#{id,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{disable,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP}, #{ip,jdbcType=VARCHAR})
	</insert>

	<insert id="insertSelective" parameterType="org.bifu.distributed.auth.domain.User">
		insert into sys_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="disable != null">
				disable,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="ip != null">
				ip,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="disable != null">
				#{disable,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="ip != null">
				#{ip,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="org.bifu.distributed.auth.domain.User">
		update sys_user
		<set>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="disable != null">
				disable = #{disable,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="ip != null">
				ip = #{ip,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>

	<update id="updateByPrimaryKey" parameterType="org.bifu.distributed.auth.domain.User">
		update sys_user
		set phone = #{phone,jdbcType=VARCHAR},
		email =
		#{email,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		disable = #{disable,jdbcType=INTEGER},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP},
		ip = #{ip,jdbcType=VARCHAR}
		where id =
		#{id,jdbcType=VARCHAR}
	</update>

	<!-- -->
	<select id="selectByPhoneOrEmail" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_user
		where phone = #{phone,jdbcType=VARCHAR} or email =
		#{email,jdbcType=VARCHAR}
	</select>
	
	<select id="countByPhoneOrEmail" parameterType="java.lang.String"
		resultType="java.lang.Integer">
		select count(1) from sys_user
		where phone = #{phone,jdbcType=VARCHAR} or email = #{email,jdbcType=VARCHAR}
	</select>

</mapper>